@model List<DemoUserManagaement.Model.NotesInfo>

<h5>Add Notes:</h5>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-6">
            <div class="notesDisplay">
                <input type="hidden" id="noteobjecttype" />
                <div class="form-group">
                    <textarea type="text" class="form-control notes" placeholder="Add Notes Here" id="Textarea1" name="NoteData"></textarea>
                </div>
                <br />
                <div class="form-group">
                    <button type="button" class="btn btn-primary" onclick="Insert()">Add</button>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div>
                <table id="notesGrid" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>
                                <a href="#" class="notes-sort-link" data-sortby="NoteId">Note ID</a>
                            </th>
                            <th>
                                <a href="#" class="notes-sort-link" data-sortby="NoteText">Note Text</a>
                            </th>
                            <th>
                                <a href="#" class="notes-sort-link" data-sortby="TimeStamp">Time Stamp</a>
                            </th>
                        </tr>
                    </thead>
                    @foreach (var note in Model)
                    {
                        <tr>
                            <td>@note.NoteID</td>
                            <td>@note.NoteText</td>
                            <td>@note.TimeStamp</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>

@{
    var currentPage = ViewBag.NotesPage ?? 0;
    var notesSortBy = ViewBag.NotesSortBy;
    var pageSize = ViewBag.NotesPageSize ?? 3;
    var objectId = ViewBag.NotesObjectId;
    var totalDoc = new DemoUserManagaement.Business.Service().LenNotes(objectId);
    var totalPages = (int)Math.Ceiling((double)totalDoc / pageSize);

}

<ul class="pagination">

    @for (int i = 1; i <= totalPages - 1; i++)
    {
        <li class="page-item @(i == currentPage ? "active" : "")">
            <a class="page-link" href="?page=@i&sortBy=@notesSortBy">@i</a>
        </li>
    }
</ul>

<script>
    $(document).ready(function () {
        document.getElementById("noteobjecttype").Text = 1;
        $('#notesGrid').on('click', 'th a', function (e) {
            e.preventDefault();

            var sortBy = $(this).data('sortby');
            $(this).toggleClass('asc desc');
            $('.notes-sort-link').removeClass('active');
            $(this).addClass('active');

            var sortOrder = $(this).hasClass('asc') ? 'asc' : 'desc';
            var objectId = @ViewBag.NotesObjectId;

            $.ajax({
                url: '/Notes/_Notes',
                type: 'GET',
                data: { objectId: objectId, page: 1, sortBy: sortBy, sortOrder: sortOrder },
                success: function (result) {
                    $('#notesGrid tbody').html($(result).find('tbody').html());
                },
                error: function (xhr, status, error) {
                    console.log('@Html.Raw(Json.Encode(ViewData.ModelState.Values.SelectMany(v => v.Errors)))');

                }
            });
        });
    });
    function Insert() {
        var textarea = document.getElementById("Textarea1").value;

        var note = {
            NoteText: textarea,
            ObjectID: parseInt(@ViewBag.ObjectID),
            ObjectType: parseInt(document.getElementById("noteobjecttype").Text)
        };

        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "/Notes/SaveNotes",
            data: JSON.stringify({ note: note }), // send the note as a property
            dataType: 'json',
            success: function (result) {
                console.log("success", result);
                location.reload();
            },
            error: function (xhr, status, error) {
                console.log("error", xhr, status, error);
            }
        });
    }
</script>